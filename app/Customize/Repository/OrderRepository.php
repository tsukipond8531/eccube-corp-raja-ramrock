<?php

/*
 * This file is part of EC-CUBE
 *
 * Copyright(c) EC-CUBE CO.,LTD. All Rights Reserved.
 *
 * http://www.ec-cube.co.jp/
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Customize\Repository;

use Doctrine\ORM\NoResultException;
use Doctrine\ORM\QueryBuilder;
use Eccube\Doctrine\Query\Queries;
use Eccube\Entity\Customer;
use Eccube\Entity\Master\OrderStatus;
use Eccube\Entity\Order;
use Eccube\Entity\Shipping;
use Eccube\Util\StringUtil;
use Symfony\Bridge\Doctrine\RegistryInterface;

use Eccube\Repository\OrderRepository as BaseRepository;
use Eccube\Repository\QueryKey;

/**
 * OrderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OrderRepository extends BaseRepository
{
    public function __construct(RegistryInterface $registry, Queries $queries)
    {
        parent::__construct($registry, $queries);
    }

    /**
     * @param  \Eccube\Entity\Customer $Customer
     *
     * @return QueryBuilder
     */
    public function getActiveOrdersByCustomer(Customer $Customer)
    {
        $excludes = [OrderStatus::CANCEL, OrderStatus::RETURNED];

        $qb = $this->createQueryBuilder('o')
            ->where('o.Customer = :Customer')
            ->andWhere('o.OrderStatus NOT IN (:excludes)')
            ->setParameter('Customer', $Customer)
            ->setParameter(':excludes', $excludes);

        // Order By
        $qb->addOrderBy('o.id', 'DESC');

        return $this->queries->customize(QueryKey::ORDER_SEARCH_BY_CUSTOMER, $qb, ['customer' => $Customer]);
    }
}
